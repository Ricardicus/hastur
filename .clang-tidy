---
# -bugprone-easily-swappable-parameters: Noisy, and there are other checks that
# catch things like suspicious call arguments.
#
# -bugprone-exception-escape: We don't use exceptions and will be building with
# -fno-exceptions soon.
#
# -bugprone-narrowing-conversions: Very noisy for not much gain.
#
# -bugprone-unchecked-optional-access: Makes clang-tidy hang during CI.
# https://github.com/llvm/llvm-project/issues/59492
#
# -cert-dcl21-cpp: Deprecated, will be removed in clang-tidy 19.
# https://releases.llvm.org/17.0.1/tools/clang/tools/extra/docs/clang-tidy/checks/cert/dcl21-cpp.html
#
# -clang-diagnostic-builtin-macro-redefined: Bazel redefines a lot of builtin
# macros to set up a reproducible build.
#
# -google-build-using-namespace: We use `using namespace` in tests and for std::literals.
#
# -misc-const-correctness: Consts some things that can't be const, and very very noisy.
#
# -misc-no-recursion: We use a lot of recursion.
#
# -modernize-make-unique, -modernize-use-emplace: Clang doesn't implement p0960
# yet, and we're not adding c-tors to all our structs.
#
# -modernize-use-nodiscard: Very noisy, and probably more meaningful if we only
# add it where it matters.
#
# -modernize-use-trailing-return-type: Stylistic change, and something we
# haven't been doing so far.
Checks: >
  bugprone-*,
  cert-*,
  concurrency-*,
  cppcoreguidelines-pro-type-cstyle-cast,
  cppcoreguidelines-pro-type-member-init,
  google-*,
  misc-*,
  modernize-*,
  performance-*,
  readability-avoid-const-params-in-decls,
  readability-container-size-empty,
  readability-duplicate-include,
  readability-else-after-return,
  readability-identifier-naming,
  readability-implicit-bool-conversion,
  readability-inconsistent-declaration-parameter-name,
  readability-isolate-declaration,
  readability-make-member-function-const,
  readability-misleading-indentation,
  readability-non-const-parameter,
  readability-qualified-auto,
  readability-redundant-control-flow,
  readability-redundant-preprocessor,
  readability-redundant-string-init,
  readability-simplify-boolean-expr,
  readability-simplify-subscript-expr,
  readability-static-definition-in-anonymous-namespace,
  readability-string-compare,
  readability-use-anyofallof,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  -bugprone-narrowing-conversions,
  -bugprone-unchecked-optional-access,
  -cert-dcl21-cpp,
  -clang-diagnostic-builtin-macro-redefined,
  -google-build-using-namespace,
  -misc-const-correctness,
  -misc-no-recursion,
  -modernize-make-unique,
  -modernize-use-emplace,
  -modernize-use-nodiscard,
  -modernize-use-trailing-return-type,

# Workaround for https://github.com/llvm/llvm-project/issues/56709 making it
# impossible to disable the clang-diagnostic-builtin-macro-redefined warning in
# clang-tidy-16.
WarningsAsErrors: "*,-clang-diagnostic-builtin-macro-redefined"

HeaderFilterRegex: "\\./(archive|azm|browser|css|css2|dom|engine|etest|geom|gfx|html|html2|idna|img|js|layout|net|os|protocol|render|style|tui|type|uri|url|util|wasm)/"

CheckOptions:
  # performance-move-const-arg
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: false

  # readability-identifier-naming
  # Classes, structs, ...
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase

  # Variables, member variables, ...
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.ProtectedMemberCase
    value: lower_case
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: _
  - key: readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _

  # Functions, methods, ...
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.MethodCase
    value: lower_case

  # Constants
  - key: readability-identifier-naming.ConstantCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k
  - key: readability-identifier-naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase

  # misc-non-private-member-variables-in-classes
  - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: true
